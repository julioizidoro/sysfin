/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tela.ContasReceber;

import com.toedter.calendar.JTextFieldDateEditor;
import controller.ClienteController;
import controller.ContasReceberController;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.Cliente;
import singleton.ConexaoSingletonTM;
import tela.Cliente.FrmConsultaCliente;
import tela.FrmSalvarAquivo;
import tela.util.Formatacao;
import tela.util.UsuarioLogadoBean;
import tela.util.relatoriosJasper;

/**
 *
 * @author Wolverine
 */
public class FrmRelatorioReceber extends javax.swing.JFrame implements IContasReceber{
    
    
    private Cliente cliente;
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private UsuarioLogadoBean usuarioLogadoBean;
    private String sql;

    /**
     * Creates new form FrmRelatorio
     */
    public FrmRelatorioReceber(UsuarioLogadoBean usuarioLogadoBean) {
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/####";
        placeHolder = '_';
        this.usuarioLogadoBean = usuarioLogadoBean;
        initComponents();
        URL url = this.getClass().getResource("/imagens/logoRelatorio/iconetela.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        verificarUsuario();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        unidadejTextField = new javax.swing.JTextField();
        selecionarjButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        dataIniciojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    dataFinaljDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
        maskPattern, placeHolder));
jLabel4 = new javax.swing.JLabel();
jPanel2 = new javax.swing.JPanel();
contasRecebidasjRadioButton = new javax.swing.JRadioButton();
contasAbertojRadioButton = new javax.swing.JRadioButton();
todasjRadioButton = new javax.swing.JRadioButton();
jPanel4 = new javax.swing.JPanel();
jButton1 = new javax.swing.JButton();
jButton2 = new javax.swing.JButton();
jButton3 = new javax.swing.JButton();

setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
setTitle("Relatório de Contas a Receber");

jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

jLabel1.setText("Unidade");

unidadejTextField.setEditable(false);

selecionarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/selecionar.png"))); // NOI18N
selecionarjButton.setText("Selecionar");
selecionarjButton.setToolTipText("Selecionar Cliente");
selecionarjButton.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        selecionarjButtonActionPerformed(evt);
    }
    });

    jLabel3.setText("Data Inicial");

    dataIniciojDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataIniciojDateChooserFocusGained(evt);
        }
    });

    dataFinaljDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataFinaljDateChooserFocusGained(evt);
        }
    });

    jLabel4.setText("Data Final");

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de Relatório"));

    buttonGroup1.add(contasRecebidasjRadioButton);
    contasRecebidasjRadioButton.setSelected(true);
    contasRecebidasjRadioButton.setText("Contas Recebidas");

    buttonGroup1.add(contasAbertojRadioButton);
    contasAbertojRadioButton.setText("Contas em Aberto");

    buttonGroup1.add(todasjRadioButton);
    todasjRadioButton.setText("Todas as Contas");

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(contasRecebidasjRadioButton)
                .addComponent(contasAbertojRadioButton)
                .addComponent(todasjRadioButton))
            .addGap(0, 234, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(contasRecebidasjRadioButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(contasAbertojRadioButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(todasjRadioButton)
            .addGap(6, 6, 6))
    );

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(dataIniciojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dataFinaljDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)))
                        .addComponent(unidadejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(selecionarjButton))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(dataFinaljDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(unidadejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(selecionarjButton))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(dataIniciojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoespequenos/confirmar.png"))); // NOI18N
    jButton1.setText("Confirmar");
    jButton1.setToolTipText("Confirmar");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoespequenos/cancel.png"))); // NOI18N
    jButton2.setText("Cancelar");
    jButton2.setToolTipText("Cancelar");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoespequenos/icone_excel.gif"))); // NOI18N
    jButton3.setText("Excel     ");
    jButton3.setToolTipText("Exportar Excel");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jButton1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
            .addComponent(jButton2)
            .addContainerGap())
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 133, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(0, 133, Short.MAX_VALUE)))
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton1)
                .addComponent(jButton2))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE)))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selecionarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarjButtonActionPerformed
        new FrmConsultaCliente(usuarioLogadoBean, this);
    }//GEN-LAST:event_selecionarjButtonActionPerformed

    private void dataIniciojDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataIniciojDateChooserFocusGained

    }//GEN-LAST:event_dataIniciojDateChooserFocusGained

    private void dataFinaljDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataFinaljDateChooserFocusGained

    }//GEN-LAST:event_dataFinaljDateChooserFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if ((dataFinaljDateChooser.getDate()==null) || (dataIniciojDateChooser.getDate()==null)){
            JOptionPane.showMessageDialog(rootPane, "Datas são obrigatórias");
        }else {
            gerarRelatorioPagamento();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new FrmSalvarAquivo(this);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton contasAbertojRadioButton;
    private javax.swing.JRadioButton contasRecebidasjRadioButton;
    private com.toedter.calendar.JDateChooser dataFinaljDateChooser;
    private com.toedter.calendar.JDateChooser dataIniciojDateChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton selecionarjButton;
    private javax.swing.JRadioButton todasjRadioButton;
    private javax.swing.JTextField unidadejTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setModel() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
 
    @Override
    public void setCliente(Cliente cliente) {
        if (cliente!=null){
            this.cliente = cliente;
            unidadejTextField.setText(cliente.getNomeFantasia());
        }
    }
    
    public void inicializarCliente() {
        if (usuarioLogadoBean.getUsuario().getCliente() > 0) {
            this.cliente = Formatacao.consultarCliente(usuarioLogadoBean);
            if (cliente != null) {
                unidadejTextField.setText(cliente.getNomeFantasia());
                selecionarjButton.setEnabled(false);
            }
        }
    }
    
    public void montarSql(){
         sql = "SELECT distinct contasreceber.idcontasReceber, contasreceber.numeroDocumento, contasreceber.nomeCliente as nomeCliente,contasreceber.valorParcela, contasreceber.numeroParcela, contasreceber.dataVencimento, contasreceber.juros,contasreceber.desagio, contasreceber.tipodocumento, contasreceber.venda, contasreceber.dataPagamento, contasreceber.valorPago,cliente.nomeFantasia, banco.nome\r\n";
                sql = sql + "from\r\n";
                sql = sql + "contasreceber join cliente on contasreceber.cliente_idcliente = cliente.idcliente\r\n";
                sql = sql + "join banco on contasreceber.banco_idbanco = banco.idbanco\r\n";
                sql = sql + "where\r\n";
         String ordem = "";
        if (contasAbertojRadioButton.isSelected()){
            sql = sql + " contasreceber.dataVencimento>='" + Formatacao.ConvercaoDataSql(dataIniciojDateChooser.getDate()) + "' ";
            sql = sql + " and contasreceber.dataVencimento<='" + Formatacao.ConvercaoDataSql(dataFinaljDateChooser.getDate()) + "' ";
            sql = sql + " and valorPago=0 "; 
            ordem = " order by contasReceber.dataVencimento";
        }
        if (contasRecebidasjRadioButton.isSelected()){
            sql = sql + " contasreceber.datapagamento>='" + Formatacao.ConvercaoDataSql(dataIniciojDateChooser.getDate()) + "' ";
            sql = sql + " and contasreceber.dataPagamento<='" + Formatacao.ConvercaoDataSql(dataFinaljDateChooser.getDate()) + "' ";
            sql = sql + " and valorPago>0 "; 
            ordem = " order by contasReceber.dataPagamento";
        }
        if (todasjRadioButton.isSelected()){
            sql = sql + " contasreceber.dataVencimento>='" + Formatacao.ConvercaoDataSql(dataIniciojDateChooser.getDate()) + "' ";
            sql = sql + " and contasreceber.dataVencimento<='" + Formatacao.ConvercaoDataSql(dataFinaljDateChooser.getDate()) + "' ";
            ordem = " order by contasReceber.dataVencimento";
        }
        if (cliente!=null){
           sql = sql  + " and cliente.idcliente="  + cliente.getIdcliente();
       }
        sql = sql + ordem;
    }
    
    public void gerarRelatorioPagamento(){
        montarSql();
        String url = ("tela/ContasReceber/Relatorio/reportContasReceber.jasper");
        Map parameters = new HashMap();
        try {
            parameters.put("sql",sql);
            Image logo = new ImageIcon(getClass().getResource("/imagens/logoRelatorio/logo.jpg")).getImage();
            parameters.put("logo", logo);
            String periodo = null;
            if ((dataIniciojDateChooser.getDate()!=null) && (dataFinaljDateChooser.getDate()!=null)){
                periodo = "Período : " + Formatacao.ConvercaoDataPadrao(dataIniciojDateChooser.getDate()) 
                        + "    " + Formatacao.ConvercaoDataPadrao(dataFinaljDateChooser.getDate());
            }
            parameters.put("periodo", periodo);
            String titulo = null;
            if (contasRecebidasjRadioButton.isSelected()){
                titulo = "RELATÓRIO DE CONTAS RECEBIDAS";
            }else if (contasAbertojRadioButton.isSelected()){
                titulo= "RELATÓRIO DE CONTAS EM ABERTO";
            }else if (todasjRadioButton.isSelected()){
                titulo = "RELATÓRIO DE CONTAS A RECEBER";
            }
            if (cliente==null){
                parameters.put("unidade", "TODAS AS UNIDADES");
            }else {
                parameters.put("unidade", cliente.getNomeFantasia());
            }
            parameters.put("titulo", titulo);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Não foi possível gerar o relatório " + ex);
            ex.printStackTrace();
        }
        new relatoriosJasper(url, parameters);
    }

    @Override
    public void exportarExcel(String caminho, String nomeArquivo) {
        montarSqlExcel();
        String localIni = System.getProperty("user.dir");
        localIni = localIni + "/sysfin.properties";
        File file = new File(localIni);
        Properties props = new Properties();
        FileInputStream fis = null;
        try {
            fis = new FileInputStream(file);
            //lê os dados que estão no arquivo
            props.load(fis);
            fis.close();
        } catch (IOException ex) {
            Logger.getLogger(ConexaoSingletonTM.class.getName()).log(Level.SEVERE, null, ex);
        }
        String banco = props.getProperty("banco");
        String local = props.getProperty("local");
        String senha = props.getProperty("senha");
        String usuario = props.getProperty("usuario");
        String porta = props.getProperty("porta");
        ContasReceberController contasReceberController = new ContasReceberController();
        contasReceberController.ExportarExcel(nomeArquivo, local, porta, senha, banco, usuario, caminho, sql);
    }
    
    public void montarSqlExcel(){
         sql = "SELECT * from viewRelatorioContasReceber ";
                sql = sql + "where\r\n";
         String ordem = "";
        if (contasAbertojRadioButton.isSelected()){
            sql = sql + " dataVencimento>='" + Formatacao.ConvercaoDataSql(dataIniciojDateChooser.getDate()) + "' ";
            sql = sql + " and dataVencimento<='" + Formatacao.ConvercaoDataSql(dataFinaljDateChooser.getDate()) + "' ";
            sql = sql + " and valorRecebido=0 "; 
            ordem = " order by dataVencimento";
        }
        if (contasRecebidasjRadioButton.isSelected()){
            sql = sql + " datapagamento>='" + Formatacao.ConvercaoDataSql(dataIniciojDateChooser.getDate()) + "' ";
            sql = sql + " and dataPagamento<='" + Formatacao.ConvercaoDataSql(dataFinaljDateChooser.getDate()) + "' ";
            sql = sql + " and valorRecebido>0 "; 
            ordem = " order by dataPagamento";
        }
        if (todasjRadioButton.isSelected()){
            sql = sql + " dataVencimento>='" + Formatacao.ConvercaoDataSql(dataIniciojDateChooser.getDate()) + "' ";
            sql = sql + " and dataVencimento<='" + Formatacao.ConvercaoDataSql(dataFinaljDateChooser.getDate()) + "' ";
            ordem = " order by dataVencimento";
        }
        if (cliente!=null){
           sql = sql  + " and codigoCliente="  + cliente.getIdcliente();
       }
        sql = sql + ordem;
    }

    @Override
    public void pesquisar(String sql) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public void verificarUsuario(){
        if (usuarioLogadoBean.getUsuario().getCliente()>0){
            ClienteController clienteController = new ClienteController();
            Cliente cliente = clienteController.consultar(usuarioLogadoBean.getUsuario().getCliente());
            if (cliente!=null){
                selecionarjButton.setEnabled(false);
                setCliente(cliente);
            }
        }
    }
}
