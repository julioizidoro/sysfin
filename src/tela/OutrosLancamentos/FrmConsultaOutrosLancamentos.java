//*
 //* To change this template, choose Tools | Templates
 //* and open the template in the editor.
 //*///

/*
 * FrmConsultaCaixa.java
 *
 * Created on 23/09/2009, 14:02:05
 */

package tela.OutrosLancamentos;


import com.toedter.calendar.JTextFieldDateEditor;
import controller.BancoController;
import controller.MovimentoBancoController;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import model.Banco;
import model.Cliente;
import model.Movimentobanco;
import tela.Cliente.FrmConsultaCliente;
import tela.util.Formatacao;
import tela.util.UsuarioLogadoBean;
import tela.util.clickColunas;


/**
 *
 * @author Wolverine
 */
public class FrmConsultaOutrosLancamentos extends javax.swing.JFrame  implements ItelaMovimentoBanco{

    private ConsultaMovimentoBancoTableModel model;
    private List<Movimentobanco> listaBanco;
    private DefaultTableCellRenderer renderer;
    private UsuarioLogadoBean usuarioLogadoBean;
    private Banco bancoselecionado;
    private Cliente cliente;
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private int numero;
    private String sql;

    /** Creates new form FrmConsultaCaixa */
    public FrmConsultaOutrosLancamentos(UsuarioLogadoBean usuarioLogadoBean) {
        this.usuarioLogadoBean = usuarioLogadoBean;
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/##";
        placeHolder = '_';
        initComponents();
        inicializarCliente();
        URL url = this.getClass().getResource("/imagens/logoRelatorio/iconetela.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        iniciarlizar();
        numero=0;
        this.setLocationRelativeTo(null);
        inicializarMovimentoBanco();
        this.setVisible(true);
        JTableHeader header = consultajTable.getTableHeader();
        header.addMouseListener(new clickColunas(this));
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AssociadosjPanel = new javax.swing.JPanel();
        BarradeTarefasjToolBar = new javax.swing.JToolBar();
        caixaAdicionarjButton = new javax.swing.JButton();
        estornojButton1 = new javax.swing.JButton();
        estornojButton = new javax.swing.JButton();
        SeparadordeTarefasjSeparator = new javax.swing.JToolBar.Separator();
        caixaVoltarjButton = new javax.swing.JButton();
        bancojComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dataIniciojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    dataFinaljDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
        maskPattern, placeHolder));
jLabel4 = new javax.swing.JLabel();
unidadejTextField = new javax.swing.JTextField();
jLabel2 = new javax.swing.JLabel();
selecionarjButton = new javax.swing.JButton();
jButton1 = new javax.swing.JButton();
jPanel1 = new javax.swing.JPanel();
jScrollPane1 = new javax.swing.JScrollPane();
consultajTable = new javax.swing.JTable();

setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
setTitle("Consulta Outros Lançamentos");
setIconImages(null);
setResizable(false);
getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

AssociadosjPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
AssociadosjPanel.setPreferredSize(new java.awt.Dimension(800, 600));

BarradeTarefasjToolBar.setFloatable(false);
BarradeTarefasjToolBar.setRollover(true);

caixaAdicionarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/adicionar.png"))); // NOI18N
caixaAdicionarjButton.setText("Lançar");
caixaAdicionarjButton.setToolTipText("Voltar");
caixaAdicionarjButton.setFocusable(false);
caixaAdicionarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
caixaAdicionarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
caixaAdicionarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
caixaAdicionarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
caixaAdicionarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
caixaAdicionarjButton.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        caixaAdicionarjButtonActionPerformed(evt);
    }
    });
    BarradeTarefasjToolBar.add(caixaAdicionarjButton);

    estornojButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/editar.png"))); // NOI18N
    estornojButton1.setText("Editar");
    estornojButton1.setToolTipText("Editar Lan'camento");
    estornojButton1.setFocusable(false);
    estornojButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    estornojButton1.setMaximumSize(new java.awt.Dimension(80, 90));
    estornojButton1.setMinimumSize(new java.awt.Dimension(80, 90));
    estornojButton1.setPreferredSize(new java.awt.Dimension(80, 90));
    estornojButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    estornojButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            estornojButton1ActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(estornojButton1);

    estornojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/excluir.png"))); // NOI18N
    estornojButton.setText("Excluir");
    estornojButton.setToolTipText("Excluir Lançamento");
    estornojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    estornojButton.setMaximumSize(new java.awt.Dimension(80, 90));
    estornojButton.setMinimumSize(new java.awt.Dimension(80, 90));
    estornojButton.setPreferredSize(new java.awt.Dimension(80, 90));
    estornojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    estornojButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            estornojButtonActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(estornojButton);
    BarradeTarefasjToolBar.add(SeparadordeTarefasjSeparator);

    caixaVoltarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/fechar.png"))); // NOI18N
    caixaVoltarjButton.setText("Fechar");
    caixaVoltarjButton.setToolTipText("Fechar");
    caixaVoltarjButton.setFocusable(false);
    caixaVoltarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    caixaVoltarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
    caixaVoltarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
    caixaVoltarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
    caixaVoltarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    caixaVoltarjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            caixaVoltarjButtonActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(caixaVoltarjButton);

    bancojComboBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            bancojComboBoxItemStateChanged(evt);
        }
    });

    jLabel1.setText("Selecione a  Conta  para Utilização");

    jLabel3.setText("Data Inicial");

    dataIniciojDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataIniciojDateChooserFocusGained(evt);
        }
    });

    dataFinaljDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataFinaljDateChooserFocusGained(evt);
        }
    });

    jLabel4.setText("Data Final");

    unidadejTextField.setEditable(false);

    jLabel2.setText("Unidade");

    selecionarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/selecionar.png"))); // NOI18N
    selecionarjButton.setText("Selecionar");
    selecionarjButton.setToolTipText("Selecionar Cliente");
    selecionarjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            selecionarjButtonActionPerformed(evt);
        }
    });

    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/selecionar.png"))); // NOI18N
    jButton1.setText("Pesquisar");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    consultajTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Data", "Descricao", "Valor Entrada", "Valor Saida"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jScrollPane1.setViewportView(consultajTable);
    if (consultajTable.getColumnModel().getColumnCount() > 0) {
        consultajTable.getColumnModel().getColumn(0).setResizable(false);
        consultajTable.getColumnModel().getColumn(1).setResizable(false);
        consultajTable.getColumnModel().getColumn(2).setResizable(false);
        consultajTable.getColumnModel().getColumn(3).setResizable(false);
    }

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1)
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
            .addContainerGap())
    );

    javax.swing.GroupLayout AssociadosjPanelLayout = new javax.swing.GroupLayout(AssociadosjPanel);
    AssociadosjPanel.setLayout(AssociadosjPanelLayout);
    AssociadosjPanelLayout.setHorizontalGroup(
        AssociadosjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(AssociadosjPanelLayout.createSequentialGroup()
            .addGap(270, 270, 270)
            .addComponent(BarradeTarefasjToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(AssociadosjPanelLayout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addGroup(AssociadosjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AssociadosjPanelLayout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap())
                .addGroup(AssociadosjPanelLayout.createSequentialGroup()
                    .addGroup(AssociadosjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addGroup(AssociadosjPanelLayout.createSequentialGroup()
                            .addComponent(unidadejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(selecionarjButton)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AssociadosjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AssociadosjPanelLayout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(57, 57, 57))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AssociadosjPanelLayout.createSequentialGroup()
                            .addComponent(dataIniciojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(AssociadosjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(dataFinaljDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AssociadosjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bancojComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton1)
                    .addGap(0, 73, Short.MAX_VALUE))))
    );
    AssociadosjPanelLayout.setVerticalGroup(
        AssociadosjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(AssociadosjPanelLayout.createSequentialGroup()
            .addGap(13, 13, 13)
            .addGroup(AssociadosjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(AssociadosjPanelLayout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AssociadosjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(unidadejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(selecionarjButton)))
                .addGroup(AssociadosjPanelLayout.createSequentialGroup()
                    .addGroup(AssociadosjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AssociadosjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AssociadosjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dataFinaljDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dataIniciojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bancojComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jButton1))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGap(18, 18, 18)
            .addComponent(BarradeTarefasjToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    getContentPane().add(AssociadosjPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 530));

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void caixaVoltarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaVoltarjButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_caixaVoltarjButtonActionPerformed

    private void caixaAdicionarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaAdicionarjButtonActionPerformed
        if (cliente != null) {
            new FrmOutrosLancamentoBanco(usuarioLogadoBean, null, cliente);
        } else {
            JOptionPane.showMessageDialog(bancojComboBox, " Selecione uma Unidade");
        }
    }//GEN-LAST:event_caixaAdicionarjButtonActionPerformed

    private void estornojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estornojButtonActionPerformed
        int linha = consultajTable.getSelectedRow();
        if (linha>=0){
            MovimentoBancoController movimentoBancoController = new MovimentoBancoController();
            movimentoBancoController.excluir(listaBanco.get(linha).getIdmovimentoBanco());
            gerarPesquisa();
        }
    }//GEN-LAST:event_estornojButtonActionPerformed

    private void bancojComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bancojComboBoxItemStateChanged
        this.bancoselecionado = (Banco) bancojComboBox.getSelectedItem();
    }//GEN-LAST:event_bancojComboBoxItemStateChanged

    private void dataIniciojDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataIniciojDateChooserFocusGained

    }//GEN-LAST:event_dataIniciojDateChooserFocusGained

    private void dataFinaljDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataFinaljDateChooserFocusGained

    }//GEN-LAST:event_dataFinaljDateChooserFocusGained

    private void selecionarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarjButtonActionPerformed
        new FrmConsultaCliente(usuarioLogadoBean, this);
    }//GEN-LAST:event_selecionarjButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        gerarPesquisa();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void estornojButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estornojButton1ActionPerformed
        if (cliente != null) {
            int linha = consultajTable.getSelectedRow();
            if (linha >= 0) {
                new FrmOutrosLancamentoBanco(usuarioLogadoBean, listaBanco.get(linha), cliente);
            }
        } else {
            JOptionPane.showMessageDialog(bancojComboBox, " Selecione uma Unidade");
        }
    }//GEN-LAST:event_estornojButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AssociadosjPanel;
    private javax.swing.JToolBar BarradeTarefasjToolBar;
    private javax.swing.JToolBar.Separator SeparadordeTarefasjSeparator;
    private javax.swing.JComboBox bancojComboBox;
    private javax.swing.JButton caixaAdicionarjButton;
    private javax.swing.JButton caixaVoltarjButton;
    private javax.swing.JTable consultajTable;
    private com.toedter.calendar.JDateChooser dataFinaljDateChooser;
    private com.toedter.calendar.JDateChooser dataIniciojDateChooser;
    private javax.swing.JButton estornojButton;
    private javax.swing.JButton estornojButton1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton selecionarjButton;
    private javax.swing.JTextField unidadejTextField;
    // End of variables declaration//GEN-END:variables

    public void carregarModel(String sql, String order){
        MovimentoBancoController movimentoBancoController = new MovimentoBancoController();
        String novoSql = sql + order;
        listaBanco = movimentoBancoController.listaMovimento(novoSql);
        if (listaBanco==null){
            listaBanco = new ArrayList<Movimentobanco>();
        }
        model = new ConsultaMovimentoBancoTableModel(listaBanco);
        consultajTable.setModel(model);
        DefaultTableCellRenderer rendererValor = new DefaultTableCellRenderer();
        rendererValor.setHorizontalAlignment(SwingConstants.RIGHT);
        consultajTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        consultajTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        consultajTable.getColumnModel().getColumn(2).setCellRenderer(rendererValor);
        consultajTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        consultajTable.getColumnModel().getColumn(3).setCellRenderer(rendererValor);
        consultajTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        consultajTable.repaint();
    }
    
    private void inicializarMovimentoBanco(){
        if (usuarioLogadoBean.getUsuario().getCliente()>0){
            BancoController bancoController = new BancoController();
            List<Banco> listaBanco = bancoController.listar(usuarioLogadoBean.getUsuario().getCliente());
            if (listaBanco!=null){
                Formatacao.preencherComobox(listaBanco, bancojComboBox);
            }
        }
    }

    @Override
    public void setCliente(Cliente cliente) {
        if (cliente!=null){
            this.cliente = cliente;
            unidadejTextField.setText(cliente.getRazaoSocial());
            BancoController bancoController = new BancoController();
            List<Banco> listaBanco = bancoController.listar(cliente.getIdcliente());
            if (listaBanco!=null){
                Formatacao.preencherComobox(listaBanco, bancojComboBox);
            }
        }
    }

    @Override
    public void setModel() {
        Banco banco = (Banco) bancojComboBox.getSelectedItem();
        if ((banco!=null) && (dataFinaljDateChooser.getDate()!=null) && (dataIniciojDateChooser.getDate()!=null)){
        sql = "Select m from movimentobanco m where m.banco=" + banco.getIdbanco() +
                "  and m.dataCompensacao>='"  + Formatacao.ConvercaoDataSql(dataIniciojDateChooser.getDate()) +
                "'  and m.dataCompensacao<='" + Formatacao.ConvercaoDataSql(dataFinaljDateChooser.getDate());
        carregarModel(sql, "");
        }else JOptionPane.showMessageDialog(bancojComboBox, " Dados invalidos");
    }
    
    public void iniciarlizar(){
        String data = Formatacao.ConvercaoDataPadrao(new Date());
        String mes = data.substring(3, 5);
        String ano = data.substring(6, 10);
        String dataInicial = Formatacao.retornaDataIniciaBrasil(Integer.parseInt(mes));
        String dataFinal = Formatacao.retornaDataFinalBrasil(Integer.parseInt(mes));
        dataInicial = dataInicial +"/" + ano;
        dataFinal = dataFinal + "/" + ano;
        Date dataI = Formatacao.ConvercaoStringDataBrasil(dataInicial);
        Date dataF = Formatacao.ConvercaoStringDataBrasil(dataFinal);
        dataIniciojDateChooser.setDate(dataI);
        dataFinaljDateChooser.setDate(dataF);
        if (usuarioLogadoBean.getUsuario().getCliente()>0){
            cliente = Formatacao.consultarCliente(usuarioLogadoBean);
            if (cliente!=null){
                unidadejTextField.setText(cliente.getNomeFantasia());
                selecionarjButton.setEnabled(false);
            }
        }
    }
    
    public void gerarPesquisa(){
        Banco banco = (Banco) bancojComboBox.getSelectedItem();
        if ((banco!=null) && (dataFinaljDateChooser.getDate()!=null) && (dataIniciojDateChooser.getDate()!=null)
                && (cliente!=null)){
        sql = "Select m from Movimentobanco m where m.banco=" + banco.getIdbanco() +
                "  and m.dataCompensacao>='"  + Formatacao.ConvercaoDataSql(dataIniciojDateChooser.getDate()) +
                "'  and m.dataCompensacao<='" + Formatacao.ConvercaoDataSql(dataFinaljDateChooser.getDate()) 
                + "' and m.cliente=" + cliente.getIdcliente();
        
        carregarModel(sql, "");
        }else JOptionPane.showMessageDialog(bancojComboBox, " Dados invalidos");
    }

    @Override
    public void exportarExcel(String caminho, String nomeArquivo) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public void inicializarCliente(){
        this.cliente = Formatacao.consultarCliente(usuarioLogadoBean);
        if (cliente!=null){
            unidadejTextField.setText(cliente.getNomeFantasia());
            selecionarjButton.setEnabled(false);
        }
    }

    @Override
    public void setNumeroColuna(int numero) {
        this.numero = numero;
        String order = "";
        if (numero==0){
            order = " order by dataCompensacao";
        }else if (numero==1){
            order =" order by descricao";
        }else if (numero==2){
            order = " order by valorEntrada";
        }else if (numero==3){
            order = " order by valorSaida";
        }
        
        carregarModel(sql, order);
    }



}
